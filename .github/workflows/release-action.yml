name: "Release Action"

on:
  push:
    tags:
      - "v*"

jobs:
    release-action:
        name: "Create Release"
        runs-on: "ubuntu-latest"
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4
              with:
                fetch-depth: 0
                ref: ${{ github.event.repository.default_branch }}

            - name: Install ZIP
              run: sudo apt install zip

            - name: Install pnpm
              uses: pnpm/action-setup@v4.0.0
              with:
                version: 9

            - name: Setup node
              uses: actions/setup-node@v4
              with:
                node-version: 20.x
                cache: "pnpm"
                cache-dependency-path: "ui/pnpm-lock.yaml"

            - name: Install dependencies
              run: pnpm i --frozen-lockfile
              working-directory: ui

            - name: Run build
              run: pnpm build
              working-directory: ui
              env:
                CI: false

            - name: Bundle files
              run: |
                shopt -s extglob
                mkdir -p ./temp/${{ github.event.repository.name }}
                mkdir -p ./temp/${{ github.event.repository.name }}/ui
                cp ./{README.md,LICENSE,fxmanifest.lua} ./temp/${{ github.event.repository.name }}
                cp -r ./{client,bridge,server} ./temp/${{ github.event.repository.name }}
                cp -r ./ui/public ./temp/${{ github.event.repository.name }}/ui/public
                cd ./temp && zip -r ../${{ github.event.repository.name }}.zip ./${{ github.event.repository.name }}

            - name: Get App Token
              uses: actions/create-github-app-token@v1
              id: generate_token
              with:
                app-id: ${{ secrets.APP_ID }}
                private-key: ${{ secrets.PRIVATE_KEY }}

            - name: Create Release
              uses: marvinpinto/action-automatic-releases@latest
              with:
                title: ${{ github.ref_name }}
                repo_token: '${{ steps.generate_token.outputs.token }}'
                prerelease: false
                files: ${{ github.event.repository.name }}.zip
